#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
#DH_VERBOSE = 1

# see EXAMPLES in dpkg-buildflags(1) and read /usr/share/dpkg/*
DPKG_EXPORT_BUILDFLAGS = 1
include /usr/share/dpkg/default.mk

# import system information
include /usr/share/dpkg/architecture.mk

# add work-around for finding libQtCLucene.so.4
export DEB_LDFLAGS_MAINT_APPEND = -Wl,-rpath-link,$(CURDIR)/build/lib

# generate Qt platform definition for debian
# (to allow cross-compiling with debians gcc names)
genplatformdef_target:
	./mkqtspec.sh
genplatformdef_target_clean:
	rm -rf source/mkspecs/linux-debian-* source/mkspecs/qws/linux-debian-*

# main packaging script based on dh7 syntax
%:
	dh $@ --sourcedirectory=source --builddirectory=build --parallel

override_dh_auto_clean: genplatformdef_target_clean
	rm -rf build
	dh_auto_clean

override_dh_auto_configure: genplatformdef_target
	mkdir -p build
	cd build; env \
		../source/configure \
		-opensource \
		-confirm-license \
		-embedded \
		-platform linux-debian-$(DEB_TARGET_ARCH) \
		-xplatform qws/linux-debian-$(DEB_TARGET_ARCH) \
		-force-pkg-config \
		-prefix /opt/qt-embedded \
		-no-rpath \
		-plugin-sql-sqlite \
		-svg \
		-system-zlib \
		-system-sqlite

override_dh_auto_test:
	# for some reason, tests dont work because "QWSServerSocket::init: Address already in use"
	#LD_LIBRARY_PATH=$(CURDIR)/build/lib dh_auto_test

override_dh_shlibdeps:
	# make sure dpkg-shlibdeps can find the qt libraries when its looking
	dh_shlibdeps -l/opt/qt-embedded/lib

override_dh_strip:
	# dont strip until we figure out how to install qt-tools (qmake, moc, lrelease) built for the target system
